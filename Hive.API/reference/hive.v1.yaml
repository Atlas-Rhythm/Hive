openapi: 3.0.0
info:
  title: Hive
  version: '1.0'
servers:
  - url: 'https://localhost:5001'
paths:
  /auth_server:
    get:
      summary: 'Get the URI location to the Auth Server linked to this Hive Instance'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
      operationId: 'get-auth_server'
  /mods:
    parameters:
      - name: page
        description: |
          The page of mods to request. Defaults to 0.
        in: query
        required: false
        schema:
          type: number
      - name: language
        description: |
          The ISO identifier of the lanugage to get mod info in.
        in: query
        required: false
        schema:
          type: string
    get:
      summary: 'Gets all of the mods in the specified channel(s), or a default if none is specified.'
      parameters:
        - name: channelId
          description: |
            The ID of the channel to look up mods in.
          in: query
          required: false
          schema:
            type: string
        - name: channelIds
          description: |
            The IDs of the channels to look up mods in.
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
            uniqueItems: true
        - schema:
            type: string
          in: query
          name: gameVersion
          description: Game version to filter by
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mod'
      operationId: get-mods
      description: |-
        Gets all mods for a given channelId and channelIds to look within.
        Query parameters left empty will use defaults.
  '/mod/{modId}':
    parameters:
      - schema:
          type: string
        name: modId
        in: path
        required: true
    get:
      summary: Gets a mod from the ID specified
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mod'
              examples: {}
      operationId: get-mod-modId
    patch:
      summary: Updates a mod with the specified ID
      tags: []
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      operationId: patch-mod
    delete:
      summary: Deletes a mod with the specified ID
      tags: []
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      operationId: delete-mod
  '/mod/upload/{modId}':
    parameters:
      - schema:
          type: string
        name: modId
        description: Mod ID to upload to
        in: path
        required: true
    post:
      summary: ''
      operationId: post-mod-upload-modId
      security:
        - vaulthAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mod'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      description: Posts a mod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mod'
  /game/versions:
    get:
      summary: Returns all game versions.
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameVersion'
      operationId: get-game-versions
      description: Returns a list of all game versions stored in the instance.
  /resolve_dependencies:
    post:
      summary: ''
      operationId: post-resolve_dependencies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                  additionalMods:
                    $ref: '#/components/schemas/Mod'
                required:
                  - message
                  - additionalMods
        '418':
          description: "I'm a teapot (RFC 2324)"
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  message:
                    type: string
                  missing:
                    type: array
                    minItems: 0
                    items:
                      $ref: '#/components/schemas/Mod'
                  conflicts:
                    type: array
                    minItems: 0
                    items:
                      $ref: '#/components/schemas/Mod'
                  versionMismatching:
                    type: array
                    minItems: 0
                    items:
                      $ref: '#/components/schemas/Mod'
                required:
                  - message
                  - missing
                  - conflicts
                  - versionMismatching
      description: |-
        Returns a list of mods that should be installed to resolve all dependencies.
        If the dependencies cannot be resolved, returns a non-200 status code and an empty array.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ModIdentifier'
        description: Mods to resolve
  '/mod/move/{channelId}':
    parameters:
      - schema:
          type: string
        name: channelId
        in: path
        required: true
    post:
      summary: ''
      operationId: post-mod-move-channelId
      security:
        - vaulthAuth: []
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                version:
                  type: string
            examples: {}
      description: Moves a mod to the provided channelId
  /channels:
    get:
      summary: 'Gets all publicly viewable channels, or all channels viewable by the given user'
      tags: []
      security:
        - vaulthAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
                uniqueItems: true
        '401':
          $ref: '#/components/responses/UnauthorizedError'
      operationId: get-channels
      description: |-
        Gets all channels that are publicly viewable.
        When passed with an auth header, then it will return all channels viewable to the authorized user.
  /instance:
    get:
      summary: 'Get basic information about this Hive instance.'
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: get-instance
      description: |-
        Get basic information about this Hive instance.
        Information can be exposed and hidden on a per-instance basis.
components:
  schemas:
    Channel:
      type: object
      title: Channel
      additionalProperties: false
      description: A channel object
      properties:
        name:
          type: string
          minLength: 1
        isPublic:
          type: boolean
        additionalData:
          type: object
      required:
        - name
        - isPublic
        - additionalData
    Mod:
      type: object
      title: Mod
      description: A mod
      additionalProperties: false
      properties:
        id:
          type: string
        version:
          type: string
        uploaderId:
          type: string
        authorIds:
          type: array
          items:
            type: string
        contributorIds:
          type: array
          items:
            type: string
        channelId:
          type: string
        links:
          type: array
          minItems: 0
          items:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
              url:
                type: string
            required:
              - name
              - url
        downloadLink:
          type: string
        additionalData:
          type: object
        localizedData:
          $ref: '#/components/schemas/LocalizedModData'
        dependencies:
          type: array
          items:
            $ref: '#/components/schemas/ModIdentifier'
        conflicts:
          type: array
          items:
            $ref: '#/components/schemas/ModIdentifier'
        gameVersions:
          type: array
          items:
            type: string
      required:
        - id
        - version
        - uploaderId
        - authorIds
        - contributorIds
        - channelId
        - links
        - downloadLink
        - additionalData
        - localizedData
        - dependencies
        - conflicts
        - gameVersions
    LocalizedModData:
      type: object
      title: LocalizedModData
      description: Localized data of a mod
      additionalProperties: false
      properties:
        language:
          type: string
        name:
          type: string
        description:
          type: string
        changelog:
          type: string
        credits:
          type: string
      required:
        - language
        - name
        - description
    GameVersion:
      type: object
      title: GameVersion
      additionalProperties: false
      properties:
        name:
          type: string
        additionalData:
          type: object
      required:
        - name
        - additionalData
    ModIdentifier:
      type: object
      title: ModIdentifier
      description: A mod ID paired with a version range.
      additionalProperties: false
      properties:
        name:
          type: string
        versionRange:
          type: string
      required:
        - name
        - versionRange
  securitySchemes:
    vaulthAuth: # Authentication through Vaulth
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Authentication information is invalid.
      headers:
        WWW_Authenticate:
          schema:
            type: string
